"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _path = require("path");

var _pathIsAbsolute = _interopRequireDefault(require("path-is-absolute"));

var _isWindows = _interopRequireDefault(require("is-windows"));

var _slash = _interopRequireDefault(require("slash2"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const debug = require('debug')('umi:devDevOpts');

function _default(opts = {}) {
  const extraResolveModules = opts.extraResolveModules,
        hash = opts.hash;
  debug(`opts: ${JSON.stringify(opts)}`);
  delete opts.extraResolveModules;
  let cwd = process.env.APP_ROOT;

  if (cwd) {
    if (!(0, _pathIsAbsolute.default)(cwd)) {
      cwd = (0, _path.join)(process.cwd(), cwd);
    }

    cwd = (0, _slash.default)(cwd); // 原因：webpack 的 include 规则得是 \ 才能判断出是绝对路径

    if ((0, _isWindows.default)()) {
      cwd = cwd.replace(/\//g, '\\');
    }
  }

  return _objectSpread({
    cwd,
    // eslint-disable-line
    babel: (0, _path.resolve)(__dirname, './babel'),
    extraResolveModules: [...(extraResolveModules || []), (0, _path.resolve)(__dirname, '../../node_modules')],
    libraryAlias: {
      dynamic: require.resolve('./dynamic'),
      link: require.resolve('./link'),
      navlink: require.resolve('./navlink'),
      redirect: require.resolve('./redirect'),
      router: require.resolve('./router'),
      withRouter: require.resolve('./withRouter'),
      _renderRoutes: require.resolve('./renderRoutes'),
      _createHistory: require.resolve('./createHistory')
    },
    hash
  }, opts);
}