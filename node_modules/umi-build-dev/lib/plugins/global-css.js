"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _path = require("path");

var _fs = require("fs");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _default(api) {
  const paths = api.service.paths;
  const winPath = api.utils.winPath;
  api.register('modifyEntryFile', ({
    memo
  }) => {
    const cssImports = [(0, _path.join)(paths.absSrcPath, 'global.css'), (0, _path.join)(paths.absSrcPath, 'global.less'), (0, _path.join)(paths.absSrcPath, 'global.sass'), (0, _path.join)(paths.absSrcPath, 'global.scss')].filter(f => (0, _fs.existsSync)(f)).map(f => `require('${winPath(f)}');`);

    if (cssImports.length) {
      return `
${memo}
${cssImports.join('\r\n')}
      `.trim();
    } else {
      return memo;
    }
  });
  api.register('modifyPageWatchers', ({
    memo
  }) => {
    return [...memo, (0, _path.join)(paths.absSrcPath, 'global.css'), (0, _path.join)(paths.absSrcPath, 'global.less'), (0, _path.join)(paths.absSrcPath, 'global.sass'), (0, _path.join)(paths.absSrcPath, 'global.scss')];
  });
  api.register('modifyAFWebpackOpts', ({
    memo
  }) => {
    return _objectSpread({}, memo, {
      cssModulesExcludes: [...(memo.cssModulesExcludes || []), (0, _path.join)(paths.absSrcPath, 'global.css'), (0, _path.join)(paths.absSrcPath, 'global.less'), (0, _path.join)(paths.absSrcPath, 'global.scss'), (0, _path.join)(paths.absSrcPath, 'global.sass')]
    });
  });
}